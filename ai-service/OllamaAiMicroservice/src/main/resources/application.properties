spring.application.name=OllamaAiCv
server.port=8082
# Required
spring.ai.ollama.base-url=http://localhost:11435
spring.ai.ollama.model=llama3
# Database connection
spring.datasource.url=jdbc:postgresql://localhost:5433/project
spring.datasource.username=root
spring.datasource.password=root

# Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG


# Optional
spring.ai.ollama.options.temperature=0.9
spring.ai.ollama.options.num-predict=50

#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.cache=false

# PDF Service Configuration
pdf.service.url=http://localhost:3001

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging
logging.level.com.example.OllamaAiMicroservice=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# If using Spring Boot DevTools
spring.devtools.restart.enabled=true

#Cloudinary configuration
cloudinary.cloud-name=dheuurohu
cloudinary.api-key=188488441947215
cloudinary.api-secret=wKKxURCKNcywoI4TOcQ32La2dDA

